const StriverSdeSheetQuestions = [
  {
    id: 1,
    topic: "  Arrays",
    problem: "Set Matrix Zeroes",
    link: "https://www.codingninjas.com/codestudio/problems/set-matrix-zeros_3846774?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website",
    solved: false,
  },
  {
    id: 2,
    topic: "  Arrays",
    problem: "Pascal’s Triangle",
    link: "https://bit.ly/3rhv153",
    solved: false,
  },
  {
    id: 3,
    topic: "  Arrays",
    problem: "Next Permutation",
    link: "https://bit.ly/3qoj5iQ",
    solved: false,
  },
  {
    id: 4,
    topic: "  Arrays",
    problem: "Kadane’s Algorithm",
    link: "https://bit.ly/3HZltTa",
    solved: false,
  },
  {
    id: 5,
    topic: "  Arrays",
    problem: "Sort an array of 0’s 1’s 2’s",
    link: "https://bit.ly/3tlM60B",
    solved: false,
  },
  {
    id: 6,
    topic: "  Arrays",
    problem: "Stock buy and Sell",
    link: "https://bit.ly/3GsANaD",
    solved: false,
  },
  {
    id: 7,
    topic: "  Arrays Part-II",
    problem: "Rotate Matrix",
    link: "https://bit.ly/3rhVUWx",
    solved: false,
  },
  {
    id: 8,
    topic: "  Arrays Part-II",
    problem: "Merge Overlapping Subintervals",
    link: "https://bit.ly/3rj9LvO",
    solved: false,
  },
  {
    id: 9,
    topic: "  Arrays Part-II",
    problem: "Merge two sorted Arrays without extra space",
    link: "https://bit.ly/33umm7e",
    solved: false,
  },
  {
    id: 10,
    topic: "  Arrays Part-II",
    problem: "Find the duplicate in an array of N+1 integers.",
    link: "https://bit.ly/3GtKDJb",
    solved: false,
  },
  {
    id: 11,
    topic: "  Arrays Part-II",
    problem: "Repeat and Missing Number",
    link: "https://bit.ly/3Gs6wZu",
    solved: false,
  },
  {
    id: 12,
    topic: "  Arrays Part-II",
    problem: "Inversion of Array (Pre-req: Merge Sort)",
    link: "https://bit.ly/339fFb7",
    solved: false,
  },
  {
    id: 13,
    topic: "  Arrays Part-III",
    problem: "Search in a 2d Matrix",
    link: "https://bit.ly/3GD7NNa",
    solved: false,
  },
  {
    id: 14,
    topic: "  Arrays Part-III",
    problem: "Pow(X,n)",
    link: "https://bit.ly/3Gtjwhl",
    solved: false,
  },
  {
    id: 15,
    topic: "  Arrays Part-III",
    problem: "Majority Element (>N/2 times)",
    link: "https://bit.ly/3FpfpBQ",
    solved: false,
  },
  {
    id: 16,
    topic: "  Arrays Part-III",
    problem: "Majority Element (>N/3 times)",
    link: "https://bit.ly/3foYLYp",
    solved: false,
  },
  {
    id: 17,
    topic: "  Arrays Part-III",
    problem: "Grid Unique Paths",
    link: "https://bit.ly/3fm1dyN",
    solved: false,
  },
  {
    id: 18,
    topic: "  Arrays Part-III",
    problem: "Reverse Pairs (Leetcode)",
    link: "https://bit.ly/3tm5PgF",
    solved: false,
  },
  {
    id: 19,
    topic: " Arrays Part-IV",
    problem: "2-Sum-Problem",
    link: "https://bit.ly/3riXBmz",
    solved: false,
  },
  {
    id: 20,
    topic: " Arrays Part-IV",
    problem: "4-sum-Problem",
    link: "https://bit.ly/3qpfEsj",
    solved: false,
  },
  {
    id: 21,
    topic: " Arrays Part-IV",
    problem: "Longest Consecutive Sequence",
    link: "https://bit.ly/34EoAS0",
    solved: false,
  },
  {
    id: 22,
    topic: " Arrays Part-IV",
    problem: "Largest Subarray with 0 sum",
    link: "https://bit.ly/31UHoeM",
    solved: false,
  },
  {
    id: 23,
    topic: " Arrays Part-IV",
    problem: "Count number of subarrays with given Xor K",
    link: "https://bit.ly/3fp24yN",
    solved: false,
  },
  {
    id: 24,
    topic: " Arrays Part-IV",
    problem: "Longest Substring without repeat",
    link: "https://bit.ly/3no44fb",
    solved: false,
  },
  {
    id: 25,
    topic: " Linked List",
    problem: "Reverse a LinkedList",
    link: "https://bit.ly/3qoE6K6",
    solved: false,
  },
  {
    id: 26,
    topic: " Linked List",
    problem: "Find the middle of LinkedList",
    link: "https://bit.ly/3KcRxoG",
    solved: false,
  },
  {
    id: 27,
    topic: " Linked List",
    problem: "Merge two sorted Linked List (use method used in mergeSort)",
    link: "https://bit.ly/3qnbSj8",
    solved: false,
  },
  {
    id: 28,
    topic: " Linked List",
    problem: "Remove N-th node from back of LinkedList",
    link: "https://bit.ly/3riZ4JB",
    solved: false,
  },
  {
    id: 29,
    topic: " Linked List",
    problem: "Add two numbers as LinkedList",
    link: "https://bit.ly/3qqbgcq",
    solved: false,
  },
  {
    id: 30,
    topic: " Linked List",
    problem: "Delete a given Node when a node is given.(0(1) solution)",
    link: "https://bit.ly/3GqW4kN",
    solved: false,
  },
  {
    id: 31,
    topic: "  Linked List Part-II",
    problem: "Find intersection point of Y LinkedList",
    link: "https://bit.ly/3fiMQeG",
    solved: false,
  },
  {
    id: 32,
    topic: "  Linked List Part-II",
    problem: "Detect a cycle in Linked List",
    link: "https://bit.ly/3I2fmxh",
    solved: false,
  },
  {
    id: 33,
    topic: "  Linked List Part-II",
    problem: "Reverse a LinkedList in groups of size k.",
    link: "https://bit.ly/3Gsfk1u",
    solved: false,
  },
  {
    id: 34,
    topic: "  Linked List Part-II",
    problem: "Check if a LinkedList is palindrome or not.",
    link: "https://bit.ly/3GqRMKv",
    solved: false,
  },
  {
    id: 35,
    topic: "  Linked List Part-II",
    problem: "Find the starting point of the Loop of LinkedList",
    link: "https://bit.ly/3K32lpf",
    solved: false,
  },
  {
    id: 36,
    topic: "  Linked List Part-II",
    problem: "Flattening of a LinkedList",
    link: "https://bit.ly/3nqtEA1",
    solved: false,
  },
  {
    id: 37,
    topic: "  Linked List and Arrays",
    problem: "Rotate a LinkedList",
    link: "https://bit.ly/33bNQPo",
    solved: false,
  },
  {
    id: 38,
    topic: "  Linked List and Arrays",
    problem: "Clone a Linked List with random and next pointer",
    link: "https://bit.ly/3qnFoFg",
    solved: false,
  },
  {
    id: 39,
    topic: "  Linked List and Arrays",
    problem: "3 sum",
    link: "https://bit.ly/33wlWxk",
    solved: false,
  },
  {
    id: 40,
    topic: "  Linked List and Arrays",
    problem: "Trapping rainwater",
    link: "https://bit.ly/3KcxExJ",
    solved: false,
  },
  {
    id: 41,
    topic: "  Linked List and Arrays",
    problem: "Remove Duplicate from Sorted array",
    link: "https://bit.ly/31Usllh",
    solved: false,
  },
  {
    id: 42,
    topic: "  Linked List and Arrays",
    problem: "Max consecutive ones",
    link: "https://leetcode.com/problems/max-consecutive-ones/",
    solved: false,
  },
  {
    id: 43,
    topic: "  Greedy Algorithm",
    problem: "N meetings in one room",
    link: "https://bit.ly/3zXdqn5",
    solved: false,
  },
  {
    id: 44,
    topic: "  Greedy Algorithm",
    problem: "Minimum number of platforms required for a railway",
    link: "https://bit.ly/3npx0mW",
    solved: false,
  },
  {
    id: 45,
    topic: "  Greedy Algorithm",
    problem: "Job sequencing Problem",
    link: "https://bit.ly/3K9XZfV",
    solved: false,
  },
  {
    id: 46,
    topic: "  Greedy Algorithm",
    problem: "Fractional Knapsack Problem",
    link: "https://bit.ly/3I7fNXn",
    solved: false,
  },
  {
    id: 47,
    topic: "  Greedy Algorithm",
    problem: "Greedy algorithm to find minimum number of coins",
    link: "https://bit.ly/3nquVHj",
    solved: false,
  },
  {
    id: 48,
    topic: "  Greedy Algorithm",
    problem: "Activity Selection (it is the same as N meeting in one room)",
    link: "https://bit.ly/3I2iPvN",
    solved: false,
  },
  {
    id: 49,
    topic: "  Recursion",
    problem: "Subset Sums",
    link: "https://www.codingninjas.com/codestudio/problems/subset-sum_3843086?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website",
    solved: false,
  },
  {
    id: 50,
    topic: "  Recursion",
    problem: "Subset-II",
    link: "https://bit.ly/3qnaLjq",
    solved: false,
  },
  {
    id: 51,
    topic: "  Recursion",
    problem: "Combination sum-1",
    link: "https://bit.ly/3qpmDS1",
    solved: false,
  },
  {
    id: 52,
    topic: "  Recursion",
    problem: "Combination sum-2",
    link: "https://bit.ly/3tkbtjk",
    solved: false,
  },
  {
    id: 53,
    topic: "  Recursion",
    problem: "Palindrome Partitioning",
    link: "https://bit.ly/3HZPNgs",
    solved: false,
  },
  {
    id: 54,
    topic: "  Recursion",
    problem: "K-th permutation Sequence",
    link: "https://bit.ly/3KcCP0D",
    solved: false,
  },
  {
    id: 55,
    topic: "  Recursion and Backtracking",
    problem: "Print all permutations of a string/array",
    link: "https://bit.ly/3fmwxNV",
    solved: false,
  },
  {
    id: 56,
    topic: "  Recursion and Backtracking",
    problem: "N queens Problem",
    link: "https://bit.ly/3zSZavC",
    solved: false,
  },
  {
    id: 57,
    topic: "  Recursion and Backtracking",
    problem: "Sudoku Solver",
    link: "https://bit.ly/31Z5Iwe",
    solved: false,
  },
  {
    id: 58,
    topic: "  Recursion and Backtracking",
    problem: "M coloring Problem",
    link: "https://bit.ly/3I48oI6",
    solved: false,
  },
  {
    id: 59,
    topic: "  Recursion and Backtracking",
    problem: "Rat in a Maze",
    link: "https://bit.ly/3fmwP7t",
    solved: false,
  },
  {
    id: 60,
    topic: "  Recursion and Backtracking",
    problem: "Word Break (print all ways)",
    link: "https://bit.ly/3FxgW92",
    solved: false,
  },
  {
    id: 61,
    topic: "  Binary Search",
    problem: "The N-th root of an integer",
    link: "https://bit.ly/3rj7Ib1",
    solved: false,
  },
  {
    id: 62,
    topic: "  Binary Search",
    problem: "Matrix Median",
    link: "https://bit.ly/33AHZTz",
    solved: false,
  },
  {
    id: 63,
    topic: "  Binary Search",
    problem:
      "Find the element that appears once in a sorted array, and the rest element appears twice (Binary search)",
    link: "https://bit.ly/3rng2qC",
    solved: false,
  },
  {
    id: 64,
    topic: "  Binary Search",
    problem:
      "Search element in a sorted and rotated array/ find pivot where it is rotated",
    link: "https://bit.ly/3nnxGcm",
    solved: false,
  },
  {
    id: 65,
    topic: "  Binary Search",
    problem: "Median of 2 sorted arrays",
    link: "https://bit.ly/3Ka3jQr",
    solved: false,
  },
  {
    id: 66,
    topic: "  Binary Search",
    problem: "K-th element of two sorted arrays",
    link: "https://bit.ly/3qm0cgu",
    solved: false,
  },
  {
    id: 67,
    topic: "  Binary Search",
    problem: "Allocate Minimum Number of Pages",
    link: "https://bit.ly/3FrKxk7",
    solved: false,
  },
  {
    id: 68,
    topic: "  Binary Search",
    problem: "Aggressive Cows",
    link: "https://bit.ly/3zV52ob",
    solved: false,
  },
  {
    id: 69,
    topic: "  Heaps",
    problem: "Max heap, Min Heap Implementation (Only for interviews)",
    link: "https://www.codingninjas.com/codestudio/problems/min-heap_4691801?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website",
    solved: false,
  },
  {
    id: 70,
    topic: "  Heaps",
    problem: "Kth Largest Element",
    link: "https://www.codingninjas.com/codestudio/problems/kth-smallest-and-largest-element-of-array_1115488?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website",
    solved: false,
  },
  {
    id: 71,
    topic: "  Heaps",
    problem: "Maximum Sum Combination",
    link: "https://www.codingninjas.com/codestudio/problems/k-max-sum-combinations_975322?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website",
    solved: false,
  },
  {
    id: 72,
    topic: "  Heaps",
    problem: "Find Median from Data Stream",
    link: "https://www.codingninjas.com/codestudio/problems/running-median_625409?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website",
    solved: false,
  },
  {
    id: 73,
    topic: "  Heaps",
    problem: "Merge K sorted arrays",
    link: "https://www.codingninjas.com/codestudio/problems/merge-k-sorted-arrays_975379?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website",
    solved: false,
  },
  {
    id: 74,
    topic: "  Heaps",
    problem: "K most frequent elements",
    link: "https://www.codingninjas.com/codestudio/problems/k-most-frequent-elements_3167808?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website",
    solved: false,
  },
  {
    id: 75,
    topic: " Stack and Queue",
    problem: "Implement Stack Using Arrays",
    link: "https://bit.ly/3KbHhN4",
    solved: false,
  },
  {
    id: 76,
    topic: " Stack and Queue",
    problem: "Implement Queue Using Arrays",
    link: "https://bit.ly/3KbIjIW",
    solved: false,
  },
  {
    id: 77,
    topic: " Stack and Queue",
    problem: "Implement Stack using Queue (using single queue)",
    link: "https://bit.ly/3reLgQs",
    solved: false,
  },
  {
    id: 78,
    topic: " Stack and Queue",
    problem: "Implement Queue using Stack (0(1) amortized method)",
    link: "https://bit.ly/3reLeIk",
    solved: false,
  },
  {
    id: 79,
    topic: " Stack and Queue",
    problem: "Check for balanced parentheses",
    link: "https://bit.ly/3nr1RiO",
    solved: false,
  },
  {
    id: 80,
    topic: " Stack and Queue",
    problem: "Next Greater Element",
    link: "https://bit.ly/3qyCjCF",
    solved: false,
  },
  {
    id: 81,
    topic: " Stack and Queue",
    problem: "Sort a Stack",
    link: "https://bit.ly/3nptF7k",
    solved: false,
  },
  {
    id: 82,
    topic: "  Stack and Queue Part-II",
    problem: "Next Smaller Element",
    link: "https://bit.ly/3K6WVtb",
    solved: false,
  },
  {
    id: 83,
    topic: "  Stack and Queue Part-II",
    problem: "LRU cache (IMPORTANT)",
    link: "https://bit.ly/3K7Cs7I",
    solved: false,
  },
  {
    id: 84,
    topic: "  Stack and Queue Part-II",
    problem: "LFU Cache",
    link: "https://bit.ly/3noxuK0",
    solved: false,
  },
  {
    id: 85,
    topic: "  Stack and Queue Part-II",
    problem: "Largest rectangle in a histogram",
    link: "https://bit.ly/3qpxbR9",
    solved: false,
  },
  {
    id: 86,
    topic: "  Stack and Queue Part-II",
    problem: "Sliding Window maximum",
    link: "https://bit.ly/3GmTkoC",
    solved: false,
  },
  {
    id: 87,
    topic: "  Stack and Queue Part-II",
    problem: "Implement Min Stack",
    link: "https://www.codingninjas.com/codestudio/problems/min-stack_3843991?topList=striver-sde-sheet-problems&utm_source=striver&utm_medium=website",
    solved: false,
  },
  {
    id: 88,
    topic: "  Stack and Queue Part-II",
    problem: "Rotten Orange (Using BFS)",
    link: "https://bit.ly/33zH0TC",
    solved: false,
  },
  {
    id: 89,
    topic: "  Stack and Queue Part-II",
    problem: "Stock Span Problem",
    link: "https://bit.ly/3GvBtMk",
    solved: false,
  },
  {
    id: 90,
    topic: "  Stack and Queue Part-II",
    problem: "Find the maximum of minimums of every window size",
    link: "https://bit.ly/3zUYLZz",
    solved: false,
  },
  {
    id: 91,
    topic: "  Stack and Queue Part-II",
    problem: "The Celebrity Problem",
    link: "https://bit.ly/3GuImxi",
    solved: false,
  },
  {
    id: 92,
    topic: "  String",
    problem: "Reverse Words in a String",
    link: "https://bit.ly/3FmKc1X",
    solved: false,
  },
  {
    id: 93,
    topic: "  String",
    problem: "Longest Palindrome in a string",
    link: "https://bit.ly/3Grdrlv",
    solved: false,
  },
  {
    id: 94,
    topic: "  String",
    problem: "Roman Number to Integer and vice versa",
    link: "https://bit.ly/3rkGuBb",
    solved: false,
  },
  {
    id: 95,
    topic: "  String",
    problem: "Implement ATOI/STRSTR",
    link: "https://bit.ly/3zXpYeb",
    solved: false,
  },
  {
    id: 96,
    topic: "  String",
    problem: "Longest Common Prefix",
    link: "https://bit.ly/3GlNN1D",
    solved: false,
  },
  {
    id: 97,
    topic: "  String",
    problem: "Rabin Karp",
    link: "https://bit.ly/3FvnLaN",
    solved: false,
  },
  {
    id: 98,
    topic: "  String Part-II",
    problem: "Z-Function",
    link: "https://bit.ly/3qs24UM",
    solved: false,
  },
  {
    id: 99,
    topic: "  String Part-II",
    problem: "KMP algo / LPS(pi) array",
    link: "https://bit.ly/31VF1s6",
    solved: false,
  },
  {
    id: 100,
    topic: "  String Part-II",
    problem:
      "Minimum characters needed to be inserted in the beginning to make it palindromic",
    link: "https://bit.ly/34RE855",
    solved: false,
  },
  {
    id: 101,
    topic: "  String Part-II",
    problem: "Check for Anagrams",
    link: "https://bit.ly/3K6weoJ",
    solved: false,
  },
  {
    id: 102,
    topic: "  String Part-II",
    problem: "Count and Say",
    link: "https://bit.ly/3K8Uwyi",
    solved: false,
  },
  {
    id: 103,
    topic: "  String Part-II",
    problem: "Compare version numbers",
    link: "https://bit.ly/3GwYuys",
    solved: false,
  },
  {
    id: 104,
    topic: "  Binary Tree",
    problem: "Inorder Traversal",
    link: "https://leetcode.com/problems/binary-tree-inorder-traversal/",
    solved: false,
  },
  {
    id: 105,
    topic: "  Binary Tree",
    problem: "Preorder Traversal",
    link: "https://leetcode.com/problems/binary-tree-preorder-traversal/",
    solved: false,
  },
  {
    id: 106,
    topic: "  Binary Tree",
    problem: "Postorder Traversal",
    link: "https://leetcode.com/problems/binary-tree-postorder-traversal/",
    solved: false,
  },
  {
    id: 107,
    topic: "  Binary Tree",
    problem: "Morris Inorder Traversal",
    link: "https://leetcode.com/problems/binary-tree-inorder-traversal/",
    solved: false,
  },
  {
    id: 108,
    topic: "  Binary Tree",
    problem: "Morris Preorder Traversal",
    link: "https://takeuforward.org/data-structure/morris-preorder-traversal-of-a-binary-tree/",
    solved: false,
  },
  {
    id: 109,
    topic: "  Binary Tree",
    problem: "LeftView Of Binary Tree",
    link: "https://bit.ly/3GtxyQa",
    solved: false,
  },
  {
    id: 110,
    topic: "  Binary Tree",
    problem: "Bottom View of Binary Tree",
    link: "https://bit.ly/3trqFLq",
    solved: false,
  },
  {
    id: 111,
    topic: "  Binary Tree",
    problem: "Top View of Binary Tree",
    link: "https://bit.ly/3Gs76WV",
    solved: false,
  },
  {
    id: 112,
    topic: "  Binary Tree",
    problem: "Preorder inorder postorder in a single traversal",
    link: "https://bit.ly/3rlXpTX",
    solved: false,
  },
  {
    id: 113,
    topic: "  Binary Tree",
    problem: "Vertical order traversal",
    link: "https://bit.ly/3KaM41v",
    solved: false,
  },
  {
    id: 114,
    topic: "  Binary Tree",
    problem: "Root to node path in a Binary Tree",
    link: "https://www.interviewbit.com/problems/path-to-given-node/",
    solved: false,
  },
  {
    id: 115,
    topic: "  Binary Tree",
    problem: "Max width of a Binary Tree",
    link: "https://bit.ly/3rm014d",
    solved: false,
  },
  {
    id: 116,
    topic: "  Binary Tree part-II",
    problem: "Level order Traversal / Level order traversal in spiral form",
    link: "https://bit.ly/3zVtSnX",
    solved: false,
  },
  {
    id: 117,
    topic: "  Binary Tree part-II",
    problem: "Height of a Binary Tree",
    link: "https://bit.ly/3qoOEco",
    solved: false,
  },
  {
    id: 118,
    topic: "  Binary Tree part-II",
    problem: "Diameter of Binary Tree",
    link: "https://bit.ly/3I3O1uD",
    solved: false,
  },
  {
    id: 119,
    topic: "  Binary Tree part-II",
    problem: "Check if the Binary tree is height-balanced or not",
    link: "https://bit.ly/3fqsvnA",
    solved: false,
  },
  {
    id: 120,
    topic: "  Binary Tree part-II",
    problem: "LCA in Binary Tree",
    link: "https://bit.ly/3tqcRko",
    solved: false,
  },
  {
    id: 121,
    topic: "  Binary Tree part-II",
    problem: "Check if two trees are identical or not",
    link: "https://bit.ly/3GuQYnE",
    solved: false,
  },
  {
    id: 122,
    topic: "  Binary Tree part-II",
    problem: "Zig Zag Traversal of Binary Tree",
    link: "https://bit.ly/3GrS3g7",
    solved: false,
  },
  {
    id: 123,
    topic: "  Binary Tree part-II",
    problem: "Boundary Traversal of Binary Tree",
    link: "https://bit.ly/3GxQ6yH",
    solved: false,
  },
  {
    id: 124,
    topic: "  Binary Tree part-III",
    problem: "Maximum path sum",
    link: "https://bit.ly/3rkQUR4",
    solved: false,
  },
  {
    id: 125,
    topic: "  Binary Tree part-III",
    problem: "Construct Binary Tree from inorder and preorder",
    link: "https://bit.ly/3fqOif3",
    solved: false,
  },
  {
    id: 126,
    topic: "  Binary Tree part-III",
    problem: "Construct Binary Tree from Inorder and Postorder",
    link: "https://bit.ly/3qrzumM",
    solved: false,
  },
  {
    id: 127,
    topic: "  Binary Tree part-III",
    problem: "Symmetric Binary Tree",
    link: "https://bit.ly/3GItN9P",
    solved: false,
  },
  {
    id: 128,
    topic: "  Binary Tree part-III",
    problem: "Flatten Binary Tree to LinkedList",
    link: "https://bit.ly/3qA9uWt",
    solved: false,
  },
  {
    id: 129,
    topic: "  Binary Tree part-III",
    problem: "Check if Binary Tree is the mirror of itself or not",
    link: "https://bit.ly/3nqSnnQ",
    solved: false,
  },
  {
    id: 130,
    topic: "  Binary Tree part-III",
    problem: "Check for Children Sum Property",
    link: "https://bit.ly/33yExIQ",
    solved: false,
  },
  {
    id: 131,
    topic: "  Binary Search Tree",
    problem: "Populate Next Right pointers of Tree",
    link: "https://bit.ly/33Bm8uX",
    solved: false,
  },
  {
    id: 132,
    topic: "  Binary Search Tree",
    problem: "Search given Key in BST",
    link: "https://bit.ly/3Ft26jR",
    solved: false,
  },
  {
    id: 133,
    topic: "  Binary Search Tree",
    problem: "Construct BST from given keys",
    link: "https://bit.ly/3qr5I1t",
    solved: false,
  },
  {
    id: 134,
    topic: "  Binary Search Tree",
    problem: "Construct BST from preorder traversal",
    link: "https://bit.ly/3Fr7GTQ",
    solved: false,
  },
  {
    id: 135,
    topic: "  Binary Search Tree",
    problem: "Check is a BT is BST or not",
    link: "https://bit.ly/3nmKek7",
    solved: false,
  },
  {
    id: 136,
    topic: "  Binary Search Tree",
    problem: "Find LCA of two nodes in BST",
    link: "https://bit.ly/3qqoaXM",
    solved: false,
  },
  {
    id: 137,
    topic: "  Binary Search Tree",
    problem: "Find the inorder predecessor/successor of a given Key in BST.",
    link: "https://bit.ly/3A0hm6l",
    solved: false,
  },
  {
    id: 138,
    topic: "  Binary Search Tree Part-II",
    problem: "Floor in a BST",
    link: "https://bit.ly/3nsqdbY",
    solved: false,
  },
  {
    id: 139,
    topic: "  Binary Search Tree Part-II",
    problem: "Ceil in a BST",
    link: "https://bit.ly/33b9enW",
    solved: false,
  },
  {
    id: 140,
    topic: "  Binary Search Tree Part-II",
    problem: "Find K-th smallest element in BST",
    link: "https://bit.ly/3rf0HrP",
    solved: false,
  },
  {
    id: 141,
    topic: "  Binary Search Tree Part-II",
    problem: "Find K-th largest element in BST",
    link: "https://bit.ly/31Yjtet",
    solved: false,
  },
  {
    id: 142,
    topic: "  Binary Search Tree Part-II",
    problem: "Find a pair with a given sum in BST",
    link: "https://bit.ly/3FvDAOO",
    solved: false,
  },
  {
    id: 143,
    topic: "  Binary Search Tree Part-II",
    problem: "BST iterator",
    link: "https://bit.ly/3FsH5FC",
    solved: false,
  },
  {
    id: 144,
    topic: "  Binary Search Tree Part-II",
    problem: "Size of the largest BST in a Binary Tree",
    link: "https://bit.ly/3fn6h5V",
    solved: false,
  },
  {
    id: 145,
    topic: "  Binary Search Tree Part-II",
    problem: "Serialize and deserialize Binary Tree",
    link: "https://bit.ly/3qr6pYD",
    solved: false,
  },
  {
    id: 146,
    topic: "  Binary Trees[Miscellaneous]",
    problem: "Binary Tree to Double Linked List",
    link: "https://bit.ly/3HVnGz0",
    solved: false,
  },
  {
    id: 147,
    topic: "  Binary Trees[Miscellaneous]",
    problem: "Find median in a stream of running integers.",
    link: "https://bit.ly/3rkTB58",
    solved: false,
  },
  {
    id: 148,
    topic: "  Binary Trees[Miscellaneous]",
    problem: "K-th largest element in a stream.",
    link: "https://bit.ly/3KdiUPp",
    solved: false,
  },
  {
    id: 149,
    topic: "  Binary Trees[Miscellaneous]",
    problem: "Distinct numbers in Window.",
    link: "https://takeuforward.org/interviews/strivers-sde-sheet-top-coding-interview-problems/bit.ly/3zYWpcb",
    solved: false,
  },
  {
    id: 150,
    topic: "  Binary Trees[Miscellaneous]",
    problem: "K-th largest element in an unsorted array.",
    link: "https://bit.ly/3GvQttz",
    solved: false,
  },
  {
    id: 151,
    topic: "  Binary Trees[Miscellaneous]",
    problem: "Flood-fill Algorithm",
    link: "https://bit.ly/3Gv1Th5",
    solved: false,
  },
  {
    id: 152,
    topic: "Graph",
    problem: "Clone a graph (Not that easy as it looks)",
    link: "https://bit.ly/33BcVmE",
    solved: false,
  },
  {
    id: 153,
    topic: "Graph",
    problem: "DFS",
    link: "https://bit.ly/33BcXeg",
    solved: false,
  },
  {
    id: 154,
    topic: "Graph",
    problem: "BFS",
    link: "https://bit.ly/3rgb26U",
    solved: false,
  },
  {
    id: 155,
    topic: "Graph",
    problem: "Detect A cycle in Undirected Graph using BFS",
    link: "https://bit.ly/3npFdrn",
    solved: false,
  },
  {
    id: 156,
    topic: "Graph",
    problem: "Detect A cycle in Undirected Graph using DFS",
    link: "https://bit.ly/3npFdrn",
    solved: false,
  },
  {
    id: 157,
    topic: "Graph",
    problem: "Detect A cycle in a Directed Graph using DFS",
    link: "https://bit.ly/3FrzaZp",
    solved: false,
  },
  {
    id: 158,
    topic: "Graph",
    problem: "Detect A cycle in a Directed Graph using BFS",
    link: "https://bit.ly/3FrzaZp",
    solved: false,
  },
  {
    id: 159,
    topic: "Graph",
    problem: "Topological Sort BFS",
    link: "https://bit.ly/33bapUo",
    solved: false,
  },
  {
    id: 160,
    topic: "Graph",
    problem: "Topological Sort DFS",
    link: "https://bit.ly/33bapUo",
    solved: false,
  },
  {
    id: 161,
    topic: "Graph",
    problem: "Number of islands(Do in Grid and Graph Both)",
    link: "https://bit.ly/3KaSCND",
    solved: false,
  },
  {
    id: 162,
    topic: "Graph",
    problem: "Bipartite Check using BFS",
    link: "https://bit.ly/3tps98W",
    solved: false,
  },
  {
    id: 163,
    topic: "Graph",
    problem: "Bipartite Check using DFS",
    link: "https://bit.ly/3tps98W",
    solved: false,
  },
  {
    id: 164,
    topic: "  Graph Part-II",
    problem: "Strongly Connected Component(using KosaRaju’s algo)",
    link: "https://bit.ly/3twUKJP",
    solved: false,
  },
  {
    id: 165,
    topic: "  Graph Part-II",
    problem: "Dijkstra’s Algorithm",
    link: "https://bit.ly/3qrEHLm",
    solved: false,
  },
  {
    id: 166,
    topic: "  Graph Part-II",
    problem: "Bellman-Ford Algo",
    link: "https://bit.ly/3GwAf3A",
    solved: false,
  },
  {
    id: 167,
    topic: "  Graph Part-II",
    problem: "Floyd Warshall Algorithm",
    link: "https://bit.ly/3Kb41Ny",
    solved: false,
  },
  {
    id: 168,
    topic: "  Graph Part-II",
    problem: "MST using Prim’s Algo",
    link: "https://bit.ly/3I5Ktbi",
    solved: false,
  },
  {
    id: 169,
    topic: "  Graph Part-II",
    problem: "MST using Kruskal’s Algo",
    link: "https://bit.ly/3I1VqL9",
    solved: false,
  },
  {
    id: 170,
    topic: "  Dynamic Programming",
    problem: "Max Product Subarray",
    link: "https://bit.ly/3fqz6OS",
    solved: false,
  },
  {
    id: 171,
    topic: "  Dynamic Programming",
    problem: "Longest Increasing Subsequence",
    link: "https://bit.ly/3GuWGpA",
    solved: false,
  },
  {
    id: 172,
    topic: "  Dynamic Programming",
    problem: "Longest Common Subsequence",
    link: "https://bit.ly/3raZbqM",
    solved: false,
  },
  {
    id: 173,
    topic: "  Dynamic Programming",
    problem: "0-1 Knapsack",
    link: "https://bit.ly/3FvHbMO",
    solved: false,
  },
  {
    id: 174,
    topic: "  Dynamic Programming",
    problem: "Edit Distance",
    link: "https://bit.ly/3qpUHgE",
    solved: false,
  },
  {
    id: 175,
    topic: "  Dynamic Programming",
    problem: "Maximum sum increasing subsequence",
    link: "https://bit.ly/3tqiS0s",
    solved: false,
  },
  {
    id: 176,
    topic: "  Dynamic Programming",
    problem: "Matrix Chain Multiplication",
    link: "https://bit.ly/3qqX56T",
    solved: false,
  },
  {
    id: 177,
    topic: "   Dynamic Programming Part-II",
    problem:
      "Minimum sum path in the matrix, (count paths and similar type do, also backtrack to find the Minimum path)",
    link: "https://bit.ly/3zWJEin",
    solved: false,
  },
  {
    id: 178,
    topic: "   Dynamic Programming Part-II",
    problem: "Coin change",
    link: "https://bit.ly/3GwBrnA",
    solved: false,
  },
  {
    id: 179,
    topic: "   Dynamic Programming Part-II",
    problem: "Subset Sum",
    link: "https://bit.ly/3rjUdb7",
    solved: false,
  },
  {
    id: 180,
    topic: "   Dynamic Programming Part-II",
    problem: "Rod Cutting",
    link: "https://bit.ly/3GuIsoS",
    solved: false,
  },
  {
    id: 181,
    topic: "   Dynamic Programming Part-II",
    problem: "Egg Dropping",
    link: "https://bit.ly/3A6id5O",
    solved: false,
  },
  {
    id: 182,
    topic: "   Dynamic Programming Part-II",
    problem: "Word Break",
    link: "https://bit.ly/3npqs7P",
    solved: false,
  },
  {
    id: 183,
    topic: "   Dynamic Programming Part-II",
    problem: "Palindrome Partitioning (MCM Variation)",
    link: "https://bit.ly/3tq9MRn",
    solved: false,
  },
  {
    id: 184,
    topic: "   Dynamic Programming Part-II",
    problem: "Maximum profit in Job scheduling",
    link: "https://bit.ly/34FoY2C",
    solved: false,
  },
  {
    id: 185,
    topic: "  Trie",
    problem: "Implement Trie (Prefix Tree)",
    link: "https://bit.ly/33wIn5x",
    solved: false,
  },
  {
    id: 186,
    topic: "  Trie",
    problem: "Implement Trie – 2 (Prefix Tree)",
    link: "https://bit.ly/3I8Q9l7",
    solved: false,
  },
  {
    id: 187,
    topic: "  Trie",
    problem: "Longest String with All Prefixes",
    link: "https://bit.ly/3qrU6vb",
    solved: false,
  },
  {
    id: 188,
    topic: "  Trie",
    problem: "Number of Distinct Substrings in a String",
    link: "https://bit.ly/3zVV1XD",
    solved: false,
  },
  {
    id: 189,
    topic: "  Trie",
    problem: "Power Set (this is very important)",
    link: "https://bit.ly/3fmd28k",
    solved: false,
  },
  {
    id: 190,
    topic: "  Trie",
    problem: "Maximum XOR of two numbers in an array",
    link: "https://bit.ly/3rjEYis",
    solved: false,
  },
  {
    id: 191,
    topic: "  Trie",
    problem: "Maximum XOR With an Element From Array",
    link: "https://bit.ly/3KbHhN4",
    solved: false,
  },
];

export const SSSTopics = new Set();
StriverSdeSheetQuestions.forEach((item) => {
  SSSTopics.add(item.topic.trim());
});

export default StriverSdeSheetQuestions;
